1.How to load Date Type data from CSV into Hive Table 
create table t_items
(item_id int,
 org_code string,
 item_num string,
 item_desc string,
 creation_date date)
 row format delimited
 fields terminated by ','
 stored as textfile;
 
The creation_date was date type, when you store date type data in csv, should be YYYY-MM-DD format, for example 2015-05-03, not
'2015-05-03', remove the single quote, just give it directly.

2. create database in Hive
hive> create (database|schema) if not exists my_hive_db  (my_hive_db is my database name which I want to create).
set database properties 
hive> alter (database|schema) my_hive_db set DBPROPERTIES ("Author"="Mark","Date"="2017-05-17");
schema keywords add at Hive0.14.0 and later.


3.Describe the database defintion
hive> describe database my_hive_db;

4.Choose one Hive database to use
hive>use database_name
hive>use my_hive_db

=================================================================================================================
Hive create Table.
CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS] [db_name.]table_name    -- (Note: TEMPORARY available in Hive 0.14.0 and later)  
 [(col_name data_type [COMMENT col_comment], ... [constraint_specification])]  
 [COMMENT table_comment]  
 [PARTITIONED BY (col_name data_type [COMMENT col_comment], ...)]  
 [CLUSTERED BY (col_name, col_name, ...) [SORTED BY (col_name [ASC|DESC], ...)] INTO num_buckets BUCKETS]  
 [SKEWED BY (col_name, col_name, ...)                  -- (Note: Available in Hive 0.10.0 and later)]     
    ON ((col_value, col_value, ...), (col_value, col_value, ...), ...)     
    [STORED AS DIRECTORIES]  
 [   
  [ROW FORMAT row_format]    
  [STORED AS file_format]     
  | STORED BY 'storage.handler.class.name' [WITH SERDEPROPERTIES (...)]  -- (Note: Available in Hive 0.6.0 and later)  ]  
  [LOCATION hdfs_path]  [TBLPROPERTIES (property_name=property_value, ...)]   -- (Note: Available in Hive 0.6.0 and later)  
  [AS select_statement];   -- (Note: Available in Hive 0.5.0 and later; not supported for external tables) 
  
  CREATE [TEMPORARY] [EXTERNAL] TABLE [IF NOT EXISTS] [db_name.]table_name  
    LIKE existing_table_or_view_name  
    [LOCATION hdfs_path]; 
    
  data_type  
    : primitive_type  
    | array_type  
    | map_type  
    | struct_type  
    | union_type  -- (Note: Available in Hive 0.7.0 and later) 
  primitive_type  
    : TINYINT  
    | SMALLINT  
    | INT  
    | BIGINT  
    | BOOLEAN  
    | FLOAT  
    | DOUBLE  
    | DOUBLE PRECISION -- (Note: Available in Hive 2.2.0 and later)  
    | STRING  
    | BINARY      -- (Note: Available in Hive 0.8.0 and later)  
    | TIMESTAMP   -- (Note: Available in Hive 0.8.0 and later)  
    | DECIMAL     -- (Note: Available in Hive 0.11.0 and later)  
    | DECIMAL(precision, scale)  -- (Note: Available in Hive 0.13.0 and later)  
    | DATE        -- (Note: Available in Hive 0.12.0 and later)  
    | VARCHAR     -- (Note: Available in Hive 0.12.0 and later)  
    | CHAR        -- (Note: Available in Hive 0.13.0 and later) 
    
  array_type  
    : ARRAY < data_type > 
  map_type  
    : MAP < primitive_type, data_type > 
  struct_type  
    : STRUCT < col_name : data_type [COMMENT col_comment], ...> 
  union_type   
    : UNIONTYPE < data_type, data_type, ... >  -- (Note: Available in Hive 0.7.0 and later) 
  row_format  
    : DELIMITED [FIELDS TERMINATED BY char [ESCAPED BY char]] [COLLECTION ITEMS TERMINATED BY char]        
          [MAP KEYS TERMINATED BY char] [LINES TERMINATED BY char]        
          [NULL DEFINED AS char]   -- (Note: Available in Hive 0.13 and later)  
    | SERDE serde_name [WITH SERDEPROPERTIES (property_name=property_value, property_name=property_value, ...)] 
  file_format:  
    : SEQUENCEFILE  
    | TEXTFILE    -- (Default, depending on hive.default.fileformat configuration)  
    | RCFILE      -- (Note: Available in Hive 0.6.0 and later)  
    | ORC         -- (Note: Available in Hive 0.11.0 and later)  
    | PARQUET     -- (Note: Available in Hive 0.13.0 and later)  
    | AVRO        -- (Note: Available in Hive 0.14.0 and later)  
    | INPUTFORMAT input_format_classname OUTPUTFORMAT output_format_classname 
  constraint_specification: 
    : [, PRIMARY KEY (col_name, ...) DISABLE NOVALIDATE ]    
      [, CONSTRAINT constraint_name FOREIGN KEY (col_name, ...) REFERENCES table_name(col_name, ...) DISABLE NOVALIDATE 


*****************************************************************************************************
Table names and column names are case insensitive but SerDe and property names are case sensitive. 

Table and column comments are string literals (single-quoted).

The TBLPROPERTIES clause allows you to tag the table definition with your own metadata key/value pairs. 
Some predefined table properties also exist, such as last_modified_user and last_modified_time which are automatically 
added and managed by Hive. Other predefined table properties include:
TBLPROPERTIES ("comment"="table_comment")
TBLPROPERTIES ("hbase.table.name"="table_name") – see HBase Integration
TBLPROPERTIES ("immutable"="true") or ("immutable"="false") in release 0.13.0+ (HIVE-6406) 
              – see Inserting Data into Hive Tables from Queries
TBLPROPERTIES ("orc.compress"="ZLIB") or ("orc.compress"="SNAPPY") or ("orc.compress"="NONE") and other ORC properties – see ORC Files
TBLPROPERTIES ("transactional"="true") or ("transactional"="false") in release 0.14.0+, the default is "false" – see Hive Transactions
TBLPROPERTIES ("NO_AUTO_COMPACTION"="true") or ("NO_AUTO_COMPACTION"="false"), the default is "false" – see Hive Transactions
TBLPROPERTIES ("compactor.mapreduce.map.memory.mb"="mapper_memory") – see Hive Transactions
TBLPROPERTIES ("compactorthreshold.hive.compactor.delta.num.threshold"="threshold_num") – see Hive Transactions
TBLPROPERTIES ("compactorthreshold.hive.compactor.delta.pct.threshold"="threshold_pct") – see Hive Transactions
TBLPROPERTIES ("auto.purge"="true") or ("auto.purge"="false") in release 1.2.0+ (HIVE-9118) – see Drop Table and Drop Partitions
TBLPROPERTIES ("EXTERNAL"="TRUE") in release 0.6.0+ (HIVE-1329) – Change a managed table to an external table and vice versa for "FALSE"
TBLPROPERTIES("parquet.mr.int96.write.zone"="timeZoneId") (HIVE-12767) – Property set on Parquet tables only, 
                                                                       - storing the Java time zone ID used to adjust timestamp values. 
                                                      Also see the configuration parameter hive.parquet.mr.int96.enable.utc.write.zone.
                                                      

