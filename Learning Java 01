==============
Java学习笔记
==============
在Java String（字符串）中切割变量，' " +variable_name+  "  '  采用这个方式切割变量，这个在JDBC开发中经常使用，这样SQL语句会更加灵活

=============
JDBC 操作
=============
可滚动的结果集： 如果想使用可滚动的结果集，则在创建PreparedStatement(Statement)的时候必须指定类型，指定结果集的类型

PreparedStatement prepareStatement(String sql,
                                   int resultSetType,  --- 结果集类型
                                   int resultSetConcurrency) 
                            throws SQLException
                            
JDBC对ResultSet进行了扩展，有几个常量比较常用，ResultSet.static final int TYPE_FORWARD_ONLY, (表示指针只能向前移动，是默认值)
ResultSet.static final int TYPE_SCROLL_SENSITIVE ResultSet可以滚动，可以更新内容，ResultSet.TYPE_SCROLL_INSENSITIVE 可以滚动，但是
不能跟新。

=========
示例代码：
=========
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.sql.PreparedStatement;
import java.sql.ResultSet;


public class JDBCResultSetDemo{
  public static final String DBDRIVER = "com.mysql.jdbc.Driver";
  public static final String DBURL = "jdbc:mysql://localhost:3306/demo";
  public static final String USERNAME = "demo";
  public static final String PASSWORD = "demo";
  
  public static void main(String args[]) throws Exception{
    Connection conn = null;
    PreparedStatement pstmt = null;
    ResultSet re = null;
    
    String sql = "select id,user_name,password,email.birthday from fnd_users";
    Class.forName(DBDRIVER);
    conn = DriverManager.getConnection(DBURL,USERNAME,PASSWORD);
    pstmt = conn.prepareStatement(sql,
                 ResultSet.TYPE_SCROLL_SENSITIVE,
                 ResultSet.CONCUR_READ_ONLY);
    rs = pstmt.executeQuery(); //Search Operation;
    rs.absolute(1);  //The Second Row of the ResultSet.
    
    
    
    
    
    
  }
}
