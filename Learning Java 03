JSP内置对象：request对象
======================
客户端的请求信息被封装在request对象中，通过它才能了解到客户的需求，然后做出响应。它是HttpServletRequest类的实例
request对象具有请求域，即完成客户端的请求之前，改对象一致有效


JSP内置对象：response对象
=======================
response对象包含了响应客户请求的有关信息，但是在JSP页面中很少直接使用它，它是HttpServletResponse类的实例。
response对象具有页面作用域，即访问一个页面时，该页面内的response对象只能对这次访问有效，其他页面的response对象
对当前页面无效，


请求转发与请求重定向
==================
重定向-两次请求 客户端行为response
转发- 一次请求 服务器行为request

Session的生命周期
=================
Session的销毁，三种销毁方式
1.调用了session.invalidate();
2.Session过期了（超时）
3.服务器重新启动

JSP内置对象：application对象
===========================
application对象实现了用户间数据的共享，可存放全局变量
application开始于服务器的启动，终于服务器的关闭
在用户的前后连接或不同用户之间的连接中，可以对application对象的同一属性进行操作
在任何地方对application对象属性的操作，都将影响到其他用户的操作
服务器的启动和关闭决定了application对象的生命
application对象是ServletContext类的实例


page内置对象
===========
page对象就是指向当前JSP页面本身，有点像类中的this指针，它是
java.lang.Object类的实例

<jsp:setProperty> 动作标签
作用：给已经实例化的JavaBean对象的属性赋值，一共有四种形式
<jsp:setProperty name="JavaBean实例名" property="*"/> (跟表单相关)
<jsp:setProperty name="JavaBean实例名" property="JavaBean属性名" /> (跟表单相关)
<jsp:setProperty name="JavaBean实例名" property="JavaBean属性名" value="BeanValue" /> (手工进行设置)
<jsp:setProperty name="JavaBean实例名" property="propertyname" param="request对象中的参数名" /> (跟request参数关联)

<jsp:getProperty>
作用：获取指定JavaBean对象的属性值
<jsp:getProperty name="JavaBean实例名" property="属性名" />


JavaBean的四个作用域范围
======================
使用useBean动作标签的scope属性可以设置JavaBean的作用域范围
page 当前页面有效
request 通过HttpRequest.getAttribute()方法获得JavaBean对象
session 可以通过HttpSession.getAttribute()方法获得JavaBean对象
application 可以通过application.getAttribute()方法获得JavaBean对象


什么是Servlet
==============
Servlet是运行在服务器端的小程序，并且是可以采用“请求-响应” 编程模型访问驻留在
服务器内存里的Servlet小程序。

Tomcat容器等级
==============
Servlet的容器管理Context容器，一个Context对应一个Web工程

手工编写Servlet程序
==================
1.继承HttpServlet抽象类
2.覆写doGet()或者doPost()
3.在web.xml文件中注册Servlet

=======================================================
